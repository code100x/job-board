generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(cuid())
  name       String

  password   String?
  avatar     String?
  isVerified Boolean @default(false)
  role       Role    @default(USER)
  jobs       Job[]

  email         String    @unique
  emailVerified DateTime?
  
  skills        String[]
  experience    Experience[]
  project       Project[]
  resume        String?
  
  oauthProvider   OauthProvider?  // Tracks OAuth provider (e.g., 'google')
  oauthId String?

  blockedByAdmin DateTime?
  onBoard Boolean @default(false)
}

enum OauthProvider {
  GOOGLE
}


model VerificationToken {
  token String
  identifier String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  type TokenType
  @@unique([token,identifier])
}

enum  TokenType {
  EMAIL_VERIFICATION
  RESET_PASSWORD
}

model Job {
  id                 String          @id @default(cuid())
  userId             String
  title              String
  description        String?
  companyName        String          @map("company_name")
  companyBio         String          @map("company_bio")
  companyEmail       String          @map("company_email")
  category           String
  type               EmployementType
  workMode           WorkMode        @map("work_mode")
  currency           Currency        @default(INR)
  city               String
  address            String
  application        String
  companyLogo        String
  skills             String[]
  hasSalaryRange     Boolean         @default(false) @map("has_salary_range")
  minSalary          Int?
  maxSalary          Int?
  hasExperiencerange Boolean         @default(false) @map("has_experience_range")
  minExperience      Int?
  maxExperience      Int?
  isVerifiedJob      Boolean         @default(false) @map("is_verified_job")
  postedAt           DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  user               User            @relation(fields: [userId], references: [id])
}

model Experience {
  id                Int @id @default(autoincrement())
  companyName       String 
  designation       String
  EmploymentType    EmployementType
  address           String
  workMode          WorkMode
  currentWorkStatus Boolean
  startDate         DateTime
  endDate           DateTime?
  description       String  
  userId            String 
  user              User      @relation(fields: [userId] ,references: [id])
}

model Project {
  id              Int @id @default(autoincrement())
  projectName     String 
  projectSummary  String
  projectLiveLink String?
  projectGithub   String
  userId          String
  user            User @relation(fields: [userId] , references: [id])
}

enum Currency {
  INR
  USD
}

enum WorkMode {
  remote
  hybrid
  office
}

enum Role {
  USER
  ADMIN
  HR
}

enum EmployementType {
  Full_time
  Part_time
  Internship
  Contract
}
